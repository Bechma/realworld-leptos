[package]
name = "realworld-leptos"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
tokio = { version = "1", optional = true }
axum = { version = "0.6", optional = true }
tower = { version = "0.4", optional = true }
tower-http = { version = "0.4", features = ["fs", "trace"], optional = true }
sqlx = { version = "0.6", features = ["runtime-tokio-rustls", "postgres", "chrono", "offline"], optional = true}
regex = { version = "1.7", optional = true }

serde = { version = "1.0.148", features = ["derive"] }

console_error_panic_hook = { version = "0.1", optional = true }

leptos = { version = "0.4", features = ["serde"]}
leptos_meta = { version = "0.4" }
leptos_axum = { version = "0.4", optional = true }
leptos_router = { version = "0.4" }
tracing = { version = "0.1" }
tracing-subscriber = { version = "0.3", features = ["fmt"]}
tracing-wasm = { version = "0.2", optional = true }

wasm-bindgen = "0.2"
web-sys = { version = "0.3", features = [
  "AbortController",
  "AbortSignal",
  "HtmlDocument",
], optional = true }

[features]
default = ["ssr", "hydrate"]
hydrate = [
  "leptos/hydrate", "leptos_meta/hydrate", "leptos_router/hydrate",
  "dep:web-sys",
  "dep:tracing-wasm",
  "dep:console_error_panic_hook",
]
ssr = [
  "dep:axum",
  "dep:tokio",
  "dep:tower",
  "dep:tower-http",
  "dep:sqlx",
  "dep:regex",
  "dep:leptos_axum",
  "leptos/ssr",
  "leptos_meta/ssr",
  "leptos_router/ssr",
]

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output_name = "realworld-leptos"

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg	
site-pkg-dir = "pkg"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/main.scss"

# [Optional] Files in the asset-dir will be copied to the site-root directory
assets-dir = "assets"

# JS source dir. `wasm-bindgen` has the option to include JS snippets from JS files
# with `#[wasm_bindgen(module = "/js/foo.js")]`. A change in any JS file in this dir
# will trigger a rebuild.
# js-dir = "js"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-address = "127.0.0.1:3000"
# The port to use for automatic reload monitoring
reload-port = 3001
# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"
#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"
# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = false
# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"
# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]
